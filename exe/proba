#!/usr/bin/env ruby

require 'probatio'

#
# gather opts

args = ARGV.dup

SWITCHES_WITH_ARG = %w[]

switches = {}
dirs, files, strings = [], [], []

while a = args.shift
  if a.match?(/^(-[a-z0-9]|--[a-z0-9]+)$/i)
    switches[a] = SWITCHES_WITH_ARG.include?(a) ? args.shift : true
  elsif File.directory?(a)
    dirs << a
  elsif File.file?(a.split(':').first)
    files << a
  else
    strings << a
  end
end

if switches['-h'] || switches['--help']

    puts %{
  Usage: bundle exec proba [OPTIONS] [FILES] [DIRS]

  A test runner for Ruby.

  Options:
    -h, --help             Show this help message and quit
    --version              Show proba's version and exit
    -m, --monochrome       Disable colour output
    -d, --dry              Don't run the test, flag them as successes
    -n, --name PATTERN     include tests matching /regexp/ or string in run
    -e, --exclude PATTERN  Exclude /regexp/ or string from run

  Files:
    TODO

  Dirs:
    TODO

  Examples:
    # Run all tests in a dir
    bundle exec proba test/

    # Run all the tests in a file
    bundle exec proba test/this_test.rb
      }.rstrip + "\n\n"
  exit 0
end

if switches['--version']

  puts "proba -- probatio test tool -- #{Probatio::VERSION}"
  exit 0
end

opts = {}

opts[:dry] = true if switches['-d'] || switches['--dry']
opts[:mono] = true if switches['-m'] || switches['--monochrome']

opts[:dirs] = dirs if dirs.any?
opts[:files] = files if files.any?
opts[:dirs] = [ 'test' ] unless opts[:dirs] || opts[:files]

#
# run

Probatio.run(opts)


# vim: set filetype=ruby

